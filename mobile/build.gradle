apply plugin: 'com.android.application'

android {
    compileSdkVersion project.compileSdkVersion
    buildToolsVersion project.buildToolsVersion

    defaultConfig {
        applicationId "com.crossover.crosschat.android"
        minSdkVersion project.minSdkVersion
        targetSdkVersion project.compileSdkVersion
        
        versionCode 1
        versionName '0.0.1_SNAPSHOT'

        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    buildTypes {
        debug {
            debuggable true
        }

        release {
            zipAlignEnabled true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        // Continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    packagingOptions {
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'

        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    
    implementation project(path: ':core')

    implementation "com.android.support:appcompat-v7:$supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$supportLibraryVersion"
    implementation "com.android.support:support-annotations:$supportLibraryVersion"
    implementation "com.android.support:design:$supportLibraryVersion"

    implementation "android.arch.lifecycle:runtime:$architectureComponentsVersion"
    implementation "android.arch.lifecycle:extensions:$architectureComponentsVersion"
    annotationProcessor "android.arch.lifecycle:compiler:$architectureComponentsVersion"

    implementation "com.arello-mobile:moxy:$moxyMvpVersion"
    implementation "com.arello-mobile:moxy-app-compat:$moxyMvpVersion"
    annotationProcessor "com.arello-mobile:moxy-compiler:$moxyMvpVersion"

    implementation "io.reactivex.rxjava2:rxandroid:$reactivexRxAndroidVersion"
    implementation "io.reactivex.rxjava2:rxjava:$reactivexRxJavaVersion"

    implementation "com.fasterxml.jackson.core:jackson-core:$jacksonCoreVersion"
    implementation "com.fasterxml.jackson.core:jackson-annotations:$jacksonAnnotationVersion"
    implementation "com.fasterxml.jackson.core:jackson-databind:$jacksonCoreVersion"

    implementation "com.jakewharton:butterknife:$butterknifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$butterknifeVersion"

    implementation "frankiesardo:icepick:$icepickVersion"
    annotationProcessor "frankiesardo:icepick-processor:$icepickVersion"

    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakCanaryVersion"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion"
    androidTestImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion"
    
    testImplementation "junit:junit:$junitVersion"

    androidTestImplementation("com.android.support.test:runner:$testRunnerVersion"){
        exclude module: 'support-annotations'
    }
    androidTestImplementation("com.android.support.test:rules:$testRunnerVersion"){
        exclude module: 'support-annotations'
    }
    androidTestImplementation ("com.android.support.test.espresso:espresso-core:$espressoVersion") {
        exclude module: 'support-annotations'
    }
    androidTestImplementation "org.hamcrest:hamcrest-library:$hamcrestVersion"
}
